bash -c '
<%= "export https_proxy=\"#{knife_config[:bootstrap_proxy]}\"" if knife_config[:bootstrap_proxy] -%>

exists() {
  if command -v $1 &>/dev/null
  then
    return 0
  else
    return 1
  fi
}

if [ ! -e /usr/bin/chef-client ]; then
  pacman -Sy
  pacman -S sudo --noconfirm --needed
  pacman -S base-devel --noconfirm --needed

  BUILD_DIR="/tmp/archlinux-chef-client-$RANDOM"
  pushd

  sudo -u nobody mkdir $BUILD_DIR
  cd $BUILD_DIR

  sudo -u nobody cat > PKGBUILD <<'EOP'
pkgname=chef-client
pkgver=12.1.0~rc.0
pkgrel=1
pkgdesc="Chef Client"
arch=("x86_64")
url="https://chef.io"
license=("Apache")
depends=()
conflicts=( chef chef-solo chef-dk )
source=("http://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/13.04/x86_64/chef_\$pkgver-\${pkgrel}_amd64.deb")

package() {
  cd "\$srcdir"
  bsdtar -xf data.tar.gz -C "\$pkgdir"

  binaries="chef-apply chef-client chef-shell knife"

  mkdir -p \$pkgdir/usr/bin

  for binary in \$binaries; do
    ln -sf /opt/chef/bin/\$binary \$pkgdir/usr/bin/ || error_exit "Cannot link \$binary to /usr/bin"
  done
}
EOP

  sudo -u nobody makepkg --skipchecksums --noconfirm
  pacman -U chef-client*.tar.xz --noconfirm

  popd
fi

mkdir -p /etc/chef

cat > /etc/chef/validation.pem <<'EOP'
<%= validation_key %>
EOP
chmod 0600 /etc/chef/validation.pem

<% if encrypted_data_bag_secret -%>
cat > /etc/chef/encrypted_data_bag_secret <<'EOP'
<%= encrypted_data_bag_secret %>
EOP
chmod 0600 /etc/chef/encrypted_data_bag_secret
<% end -%>

<% unless trusted_certs.empty? -%>
mkdir -p /etc/chef/trusted_certs
<%= trusted_certs %>
<% end -%>


<%# Generate Ohai Hints -%>
<% unless @chef_config[:knife][:hints].nil? || @chef_config[:knife][:hints].empty? -%>
mkdir -p /etc/chef/ohai/hints

<% @chef_config[:knife][:hints].each do |name, hash| -%>
cat > /etc/chef/ohai/hints/<%= name %>.json <<'EOP'
<%= Chef::JSONCompat.to_json(hash) %>
EOP
<% end -%>
<% end -%>

cat > /etc/chef/client.rb <<'EOP'
<%= config_content %>
EOP

cat > /etc/chef/first-boot.json <<'EOP'
<%= Chef::JSONCompat.to_json(first_boot) %>
EOP

echo "Starting first Chef Client run..."

<%= start_chef %>'
